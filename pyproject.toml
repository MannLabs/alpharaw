[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "alpharaw"
requires-python = ">=3.8"
dynamic = ["version", "dependencies", "optional-dependencies"]

authors = [
    {name = "Mann Labs", email = "jalew188@gmail.com"}
]
description = "An open-source Python package to unify raw MS data access and storage."
readme = "README.md"
keywords = [
    "mass spectrometry",
    "proteomics",
    "bioinformatics",
    "mass spectrometry",
    "raw data",
    "data access",
    "data storage",
    "AlphaPept",
    "AlphaPept ecosystem",
    "AlphaX ecosystem",
]
license = {file = "LICENSE.txt"}
classifiers = [
    "Development Status :: 3 - Alpha",
    # "Development Status :: 4 - Beta",
    # "Development Status :: 5 - Production/Stable",
    # "Development Status :: 6 - Mature",
    # "Development Status :: 7 - Inactive"
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

[project.urls]

#"Paper preprint" = "https://www.biochem.mpg.de/mann"
Repository = "https://github.com/MannLabs/alpharaw"
#Documentation = "https://alpharaw.readthedocs.io/en/latest/"
#Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"
Issues = "https://github.com/MannLabs/alpharaw/issues"
"Mann Labs Homepage" = "https://www.biochem.mpg.de/mann"

[tool.setuptools.packages]
find = {}

[tool.setuptools.dynamic]
# https://stackoverflow.com/a/73600610
dependencies = {file = ["requirements/requirements_loose.txt"]}
optional-dependencies.stable = { file = ["requirements/requirements.txt" ]}
optional-dependencies.viz = { file = ["requirements/requirements_viz.txt" ]}
optional-dependencies.tests = { file = [ "requirements/requirements_tests.txt", "requirements/requirements_viz.txt"]}
optional-dependencies.docs = { file = [ "requirements/requirements_docs.txt"]}
optional-dependencies.development = { file = [
            "requirements/requirements_development.txt",
            "requirements/requirements_tests.txt",
            "requirements/requirements_docs.txt"
            ] }

version = {attr = "alpharaw.__version__"}

[project.scripts]
alpharaw = "alpharaw.cli:run"



[tool.ruff.lint]
select =  [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = [
    "E501",  # Line too long  (ruff wraps code, but not docstrings)
    "B028",  #  No explicit `stacklevel` keyword argument found (for warnings)
    "B006", # Do not use mutable data structures for argument defaults # TODO: fix this!
]
