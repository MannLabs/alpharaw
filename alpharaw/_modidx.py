# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/alpharaw',
                'doc_host': 'https://MannLabs.github.io',
                'git_url': 'https://github.com/MannLabs/alpharaw',
                'lib_path': 'alpharaw'},
  'syms': { 'alpharaw.ext.bruker.timsdata': {},
            'alpharaw.ext.bruker.tsfdata': {},
            'alpharaw.legacy_msdata.mgf': { 'alpharaw.legacy_msdata.mgf.MGFReader': ( 'legacy_msdata/mgf.html#mgfreader',
                                                                                      'alpharaw/legacy_msdata/mgf.py'),
                                            'alpharaw.legacy_msdata.mgf.MGFReader._import': ( 'legacy_msdata/mgf.html#mgfreader._import',
                                                                                              'alpharaw/legacy_msdata/mgf.py'),
                                            'alpharaw.legacy_msdata.mgf.MGFReader._set_dataframes': ( 'legacy_msdata/mgf.html#mgfreader._set_dataframes',
                                                                                                      'alpharaw/legacy_msdata/mgf.py'),
                                            'alpharaw.legacy_msdata.mgf.find_line': ( 'legacy_msdata/mgf.html#find_line',
                                                                                      'alpharaw/legacy_msdata/mgf.py'),
                                            'alpharaw.legacy_msdata.mgf.parse_scan_from_TITLE': ( 'legacy_msdata/mgf.html#parse_scan_from_title',
                                                                                                  'alpharaw/legacy_msdata/mgf.py'),
                                            'alpharaw.legacy_msdata.mgf.read_until': ( 'legacy_msdata/mgf.html#read_until',
                                                                                       'alpharaw/legacy_msdata/mgf.py')},
            'alpharaw.legacy_msdata.mzml': {},
            'alpharaw.match.match_utils': { 'alpharaw.match.match_utils.match_centroid_mz': ( 'match/match_utils.html#match_centroid_mz',
                                                                                              'alpharaw/match/match_utils.py'),
                                            'alpharaw.match.match_utils.match_profile_first_last_mz': ( 'match/match_utils.html#match_profile_first_last_mz',
                                                                                                        'alpharaw/match/match_utils.py'),
                                            'alpharaw.match.match_utils.match_profile_mz': ( 'match/match_utils.html#match_profile_mz',
                                                                                             'alpharaw/match/match_utils.py')},
            'alpharaw.match.psm_match': { 'alpharaw.match.psm_match.PepSpecMatch': ( 'match/psm_match.html#pepspecmatch',
                                                                                     'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch.__init__': ( 'match/psm_match.html#pepspecmatch.__init__',
                                                                                              'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch._add_missing_columns_to_psm_df': ( 'match/psm_match.html#pepspecmatch._add_missing_columns_to_psm_df',
                                                                                                                    'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch._match_ms2_one_raw_numba': ( 'match/psm_match.html#pepspecmatch._match_ms2_one_raw_numba',
                                                                                                              'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch._match_one_psm': ( 'match/psm_match.html#pepspecmatch._match_one_psm',
                                                                                                    'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch._prepare_matching_dfs': ( 'match/psm_match.html#pepspecmatch._prepare_matching_dfs',
                                                                                                           'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch._preprocess_psms': ( 'match/psm_match.html#pepspecmatch._preprocess_psms',
                                                                                                      'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch.get_fragment_mz_df': ( 'match/psm_match.html#pepspecmatch.get_fragment_mz_df',
                                                                                                        'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch.get_peaks': ( 'match/psm_match.html#pepspecmatch.get_peaks',
                                                                                               'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch.load_ms_data': ( 'match/psm_match.html#pepspecmatch.load_ms_data',
                                                                                                  'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch.match_ms2_multi_raw': ( 'match/psm_match.html#pepspecmatch.match_ms2_multi_raw',
                                                                                                         'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.PepSpecMatch.match_ms2_one_raw': ( 'match/psm_match.html#pepspecmatch.match_ms2_one_raw',
                                                                                                       'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.load_ms_data': ( 'match/psm_match.html#load_ms_data',
                                                                                     'alpharaw/match/psm_match.py'),
                                          'alpharaw.match.psm_match.match_one_raw_with_numba': ( 'match/psm_match.html#match_one_raw_with_numba',
                                                                                                 'alpharaw/match/psm_match.py')},
            'alpharaw.match.psm_match_alphatims': { 'alpharaw.match.psm_match_alphatims.PepSpecMatch_AlphaTims': ( 'match/psm_match_alphatims.html#pepspecmatch_alphatims',
                                                                                                                   'alpharaw/match/psm_match_alphatims.py'),
                                                    'alpharaw.match.psm_match_alphatims.PepSpecMatch_AlphaTims.get_peaks': ( 'match/psm_match_alphatims.html#pepspecmatch_alphatims.get_peaks',
                                                                                                                             'alpharaw/match/psm_match_alphatims.py'),
                                                    'alpharaw.match.psm_match_alphatims.PepSpecMatch_AlphaTims.load_ms_data': ( 'match/psm_match_alphatims.html#pepspecmatch_alphatims.load_ms_data',
                                                                                                                                'alpharaw/match/psm_match_alphatims.py'),
                                                    'alpharaw.match.psm_match_alphatims.PepSpecMatch_AlphaTims.match_ms2_multi_raw': ( 'match/psm_match_alphatims.html#pepspecmatch_alphatims.match_ms2_multi_raw',
                                                                                                                                       'alpharaw/match/psm_match_alphatims.py'),
                                                    'alpharaw.match.psm_match_alphatims.PepSpecMatch_AlphaTims.match_ms2_one_raw': ( 'match/psm_match_alphatims.html#pepspecmatch_alphatims.match_ms2_one_raw',
                                                                                                                                     'alpharaw/match/psm_match_alphatims.py'),
                                                    'alpharaw.match.psm_match_alphatims.load_ms_data_tims': ( 'match/psm_match_alphatims.html#load_ms_data_tims',
                                                                                                              'alpharaw/match/psm_match_alphatims.py')},
            'alpharaw.ms_data_base': { 'alpharaw.ms_data_base.MSData_Base': ('ms_data_base.html#msdata_base', 'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.__init__': ( 'ms_data_base.html#msdata_base.__init__',
                                                                                       'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._check_df': ( 'ms_data_base.html#msdata_base._check_df',
                                                                                        'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._check_mobility': ( 'ms_data_base.html#msdata_base._check_mobility',
                                                                                              'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._check_precursor_mz': ( 'ms_data_base.html#msdata_base._check_precursor_mz',
                                                                                                  'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._check_rt': ( 'ms_data_base.html#msdata_base._check_rt',
                                                                                        'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._import': ( 'ms_data_base.html#msdata_base._import',
                                                                                      'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._load_meta_from_hdf': ( 'ms_data_base.html#msdata_base._load_meta_from_hdf',
                                                                                                  'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._read_creation_time': ( 'ms_data_base.html#msdata_base._read_creation_time',
                                                                                                  'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._save_meta_to_hdf': ( 'ms_data_base.html#msdata_base._save_meta_to_hdf',
                                                                                                'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base._set_dataframes': ( 'ms_data_base.html#msdata_base._set_dataframes',
                                                                                              'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.add_column_in_df_by_thermo_scan_num': ( 'ms_data_base.html#msdata_base.add_column_in_df_by_thermo_scan_num',
                                                                                                                  'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.add_column_in_spec_df': ( 'ms_data_base.html#msdata_base.add_column_in_spec_df',
                                                                                                    'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.create_spectrum_df': ( 'ms_data_base.html#msdata_base.create_spectrum_df',
                                                                                                 'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.get_peaks': ( 'ms_data_base.html#msdata_base.get_peaks',
                                                                                        'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.import_raw': ( 'ms_data_base.html#msdata_base.import_raw',
                                                                                         'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.load_hdf': ( 'ms_data_base.html#msdata_base.load_hdf',
                                                                                       'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.load_raw': ( 'ms_data_base.html#msdata_base.load_raw',
                                                                                       'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.raw_file_path': ( 'ms_data_base.html#msdata_base.raw_file_path',
                                                                                            'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.reset_spec_idxes': ( 'ms_data_base.html#msdata_base.reset_spec_idxes',
                                                                                               'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.save_hdf': ( 'ms_data_base.html#msdata_base.save_hdf',
                                                                                       'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.set_peaks_by_array_list': ( 'ms_data_base.html#msdata_base.set_peaks_by_array_list',
                                                                                                      'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.set_peaks_by_cat_array': ( 'ms_data_base.html#msdata_base.set_peaks_by_cat_array',
                                                                                                     'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.set_precursor_mz': ( 'ms_data_base.html#msdata_base.set_precursor_mz',
                                                                                               'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_Base.set_precursor_mz_windows': ( 'ms_data_base.html#msdata_base.set_precursor_mz_windows',
                                                                                                       'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_HDF': ('ms_data_base.html#msdata_hdf', 'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSData_HDF.import_raw': ( 'ms_data_base.html#msdata_hdf.import_raw',
                                                                                        'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSReaderProvider': ( 'ms_data_base.html#msreaderprovider',
                                                                                   'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSReaderProvider.__init__': ( 'ms_data_base.html#msreaderprovider.__init__',
                                                                                            'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSReaderProvider.get_reader': ( 'ms_data_base.html#msreaderprovider.get_reader',
                                                                                              'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.MSReaderProvider.register_reader': ( 'ms_data_base.html#msreaderprovider.register_reader',
                                                                                                   'alpharaw/ms_data_base.py'),
                                       'alpharaw.ms_data_base.index_ragged_list': ( 'ms_data_base.html#index_ragged_list',
                                                                                    'alpharaw/ms_data_base.py')},
            'alpharaw.raw_access.clr_utils': {},
            'alpharaw.raw_access.pysciexwifffilereader': {},
            'alpharaw.raw_access.pythermorawfilereader': {},
            'alpharaw.sciex': { 'alpharaw.sciex.SciexWiffData': ('sciex.html#sciexwiffdata', 'alpharaw/sciex.py'),
                                'alpharaw.sciex.SciexWiffData.__init__': ('sciex.html#sciexwiffdata.__init__', 'alpharaw/sciex.py'),
                                'alpharaw.sciex.SciexWiffData._import': ('sciex.html#sciexwiffdata._import', 'alpharaw/sciex.py'),
                                'alpharaw.sciex.SciexWiffData._set_dataframes': ( 'sciex.html#sciexwiffdata._set_dataframes',
                                                                                  'alpharaw/sciex.py')},
            'alpharaw.thermo': { 'alpharaw.thermo.ThermoRawData': ('thermo.html#thermorawdata', 'alpharaw/thermo.py'),
                                 'alpharaw.thermo.ThermoRawData.__init__': ('thermo.html#thermorawdata.__init__', 'alpharaw/thermo.py'),
                                 'alpharaw.thermo.ThermoRawData._import': ('thermo.html#thermorawdata._import', 'alpharaw/thermo.py'),
                                 'alpharaw.thermo.ThermoRawData._set_dataframes': ( 'thermo.html#thermorawdata._set_dataframes',
                                                                                    'alpharaw/thermo.py')},
            'alpharaw.utils.centroiding': {},
            'alpharaw.utils.deconvolution': {},
            'alpharaw.utils.ms_path_utils': { 'alpharaw.utils.ms_path_utils.parse_ms_files_to_dict': ( 'utils/ms_path_utils.html#parse_ms_files_to_dict',
                                                                                                       'alpharaw/utils/ms_path_utils.py')},
            'alpharaw.utils.smoothing': {},
            'alpharaw.wrappers.alphapept_wrapper': { 'alpharaw.wrappers.alphapept_wrapper.AlphaPept_HDF_MS2_Reader': ( 'wrappers/alphapept_wrapper.html#alphapept_hdf_ms2_reader',
                                                                                                                       'alpharaw/wrappers/alphapept_wrapper.py'),
                                                     'alpharaw.wrappers.alphapept_wrapper.AlphaPept_HDF_MS2_Reader._import': ( 'wrappers/alphapept_wrapper.html#alphapept_hdf_ms2_reader._import',
                                                                                                                               'alpharaw/wrappers/alphapept_wrapper.py'),
                                                     'alpharaw.wrappers.alphapept_wrapper.AlphaPept_HDF_MS2_Reader._set_dataframes': ( 'wrappers/alphapept_wrapper.html#alphapept_hdf_ms2_reader._set_dataframes',
                                                                                                                                       'alpharaw/wrappers/alphapept_wrapper.py'),
                                                     'alpharaw.wrappers.alphapept_wrapper.extract_ms1': ( 'wrappers/alphapept_wrapper.html#extract_ms1',
                                                                                                          'alpharaw/wrappers/alphapept_wrapper.py'),
                                                     'alpharaw.wrappers.alphapept_wrapper.extract_ms2': ( 'wrappers/alphapept_wrapper.html#extract_ms2',
                                                                                                          'alpharaw/wrappers/alphapept_wrapper.py'),
                                                     'alpharaw.wrappers.alphapept_wrapper.get_peak_lists': ( 'wrappers/alphapept_wrapper.html#get_peak_lists',
                                                                                                             'alpharaw/wrappers/alphapept_wrapper.py'),
                                                     'alpharaw.wrappers.alphapept_wrapper.parse_msdata_to_alphapept': ( 'wrappers/alphapept_wrapper.html#parse_msdata_to_alphapept',
                                                                                                                        'alpharaw/wrappers/alphapept_wrapper.py')},
            'alpharaw.wrappers.alphatims_wrapper': { 'alpharaw.wrappers.alphatims_wrapper.AlphaTimsWrapper': ( 'wrappers/alphatims_wrapper.html#alphatimswrapper',
                                                                                                               'alpharaw/wrappers/alphatims_wrapper.py'),
                                                     'alpharaw.wrappers.alphatims_wrapper.AlphaTimsWrapper.__init__': ( 'wrappers/alphatims_wrapper.html#alphatimswrapper.__init__',
                                                                                                                        'alpharaw/wrappers/alphatims_wrapper.py'),
                                                     'alpharaw.wrappers.alphatims_wrapper.AlphaTimsWrapper._import_alpharaw_object': ( 'wrappers/alphatims_wrapper.html#alphatimswrapper._import_alpharaw_object',
                                                                                                                                       'alpharaw/wrappers/alphatims_wrapper.py')}}}